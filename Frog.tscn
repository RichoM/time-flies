[gd_scene load_steps=28 format=2]

[ext_resource path="res://frog.gd" type="Script" id=1]
[ext_resource path="res://tongue.gd" type="Script" id=2]
[ext_resource path="res://assets/frogs.png" type="Texture" id=3]
[ext_resource path="res://sfx/eat.wav" type="AudioStream" id=4]
[ext_resource path="res://assets/tip.png" type="Texture" id=5]
[ext_resource path="res://reflection.gd" type="Script" id=6]
[ext_resource path="res://assets/tongue.png" type="Texture" id=7]
[ext_resource path="res://sfx/chomp.mp3" type="AudioStream" id=8]
[ext_resource path="res://sfx/croak.mp3" type="AudioStream" id=9]
[ext_resource path="res://assets/black.png" type="Texture" id=10]
[ext_resource path="res://assets/remplazoflechita.png" type="Texture" id=11]

[sub_resource type="Shader" id=5]
code = "shader_type canvas_item;

uniform vec2 displacement;

void fragment() {
	vec2 p = UV + displacement;
	if (p.y < 0.0) discard;
	if (UV.y > (0.75 + sin(TIME * 1.5 + UV.x * 25.0) / 150.0)) discard;
	else {
		COLOR = texture(TEXTURE, p);
	}
}
"

[sub_resource type="ShaderMaterial" id=8]
resource_local_to_scene = true
shader = SubResource( 5 )
shader_param/displacement = Vector2( 0, 0 )

[sub_resource type="AtlasTexture" id=21]
flags = 4
atlas = ExtResource( 3 )
region = Rect2( 300, 0, 150, 150 )

[sub_resource type="AtlasTexture" id=22]
flags = 4
atlas = ExtResource( 3 )
region = Rect2( 0, 0, 150, 150 )

[sub_resource type="AtlasTexture" id=23]
flags = 4
atlas = ExtResource( 3 )
region = Rect2( 450, 0, 150, 150 )

[sub_resource type="AtlasTexture" id=24]
flags = 4
atlas = ExtResource( 3 )
region = Rect2( 600, 0, 150, 150 )

[sub_resource type="AtlasTexture" id=25]
flags = 4
atlas = ExtResource( 3 )
region = Rect2( 0, 0, 150, 150 )

[sub_resource type="AtlasTexture" id=26]
flags = 4
atlas = ExtResource( 3 )
region = Rect2( 150, 0, 150, 150 )

[sub_resource type="AtlasTexture" id=27]
flags = 4
atlas = ExtResource( 3 )
region = Rect2( 600, 0, 150, 150 )

[sub_resource type="AtlasTexture" id=28]
flags = 4
atlas = ExtResource( 3 )
region = Rect2( 750, 0, 150, 150 )

[sub_resource type="SpriteFrames" id=1]
animations = [ {
"frames": [ SubResource( 21 ) ],
"loop": true,
"name": "open",
"speed": 5.0
}, {
"frames": [ SubResource( 22 ) ],
"loop": true,
"name": "closed",
"speed": 5.0
}, {
"frames": [ SubResource( 23 ), SubResource( 24 ) ],
"loop": true,
"name": "hurt",
"speed": 5.0
}, {
"frames": [ SubResource( 25 ), SubResource( 26 ) ],
"loop": true,
"name": "eating",
"speed": 5.0
}, {
"frames": [ SubResource( 27 ), SubResource( 28 ) ],
"loop": true,
"name": "sad",
"speed": 5.0
} ]

[sub_resource type="Shader" id=17]
code = "shader_type canvas_item;
render_mode blend_mix;

uniform vec2 displacement;
uniform float speed = 10.0;
uniform float waves = 60.0;

float Remap01(float value, float from, float to) {
	return (value - from) / (to - from);
}

void fragment() {
	vec2 uv = UV;
	//uv.x += Remap01(sin(uv.y * uv.x * waves - (-TIME * speed)), -waves, waves) - 0.5;
	vec2 p = uv + displacement;
	if (displacement.y < 0.0 && uv.y > 0.7) discard;
	else {
		COLOR = texture(TEXTURE, p);
		if (COLOR.r > 0.001 && COLOR.g > 0.001 && COLOR.b > 0.001) {
			COLOR.a = UV.y - 0.35;
		}
	}
}"

[sub_resource type="ShaderMaterial" id=18]
resource_local_to_scene = true
shader = SubResource( 17 )
shader_param/displacement = Vector2( 0, -0.2 )
shader_param/speed = 1.0
shader_param/waves = 100.0

[sub_resource type="Curve" id=20]
_data = [ Vector2( 0, 0.618182 ), 0.0, -0.876136, 0, 0, Vector2( 0.607004, 1 ), 0.54334, 0.0, 0, 0, Vector2( 1, 0.809091 ), 0.0, 0.0, 0, 0 ]

[sub_resource type="CircleShape2D" id=2]
radius = 80.6226

[sub_resource type="Animation" id=7]
resource_name = "appear"
tracks/0/type = "value"
tracks/0/path = NodePath(".:height")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 1 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 0,
"values": [ -1.0, 0.0 ]
}

[node name="Frog" type="Node2D"]
script = ExtResource( 1 )
height = -1.0

[node name="body" type="AnimatedSprite" parent="."]
material = SubResource( 8 )
position = Vector2( 0, -32.328 )
frames = SubResource( 1 )
animation = "closed"
playing = true

[node name="reflection" type="Sprite" parent="."]
show_behind_parent = true
material = SubResource( 18 )
position = Vector2( 0, -82 )
texture = ExtResource( 3 )
offset = Vector2( 0, 110 )
flip_v = true
script = ExtResource( 6 )
body_path = NodePath("../body")

[node name="tongue" type="Node2D" parent="."]
position = Vector2( 19, -39 )
script = ExtResource( 2 )

[node name="sfx" type="AudioStreamPlayer" parent="tongue"]
stream = ExtResource( 4 )

[node name="line" type="Line2D" parent="tongue"]
z_index = 100
points = PoolVector2Array( 0, 0, 100, 0 )
width = 30.0
width_curve = SubResource( 20 )
default_color = Color( 1, 1, 1, 1 )
texture = ExtResource( 7 )
texture_mode = 1
begin_cap_mode = 2
end_cap_mode = 2
antialiased = true

[node name="black" type="Sprite" parent="tongue/line"]
visible = false
scale = Vector2( 0.5, 0.5 )
z_index = 150
texture = ExtResource( 10 )

[node name="tip" type="Area2D" parent="tongue"]
position = Vector2( 100, 0 )
scale = Vector2( 0.5, 0.3 )
collision_mask = 2

[node name="sprite" type="Sprite" parent="tongue/tip"]
scale = Vector2( 0.65, 0.65 )
z_index = 100
texture = ExtResource( 5 )

[node name="CollisionShape2D" type="CollisionShape2D" parent="tongue/tip"]
shape = SubResource( 2 )

[node name="points" type="Position2D" parent="."]
position = Vector2( 0, -81 )

[node name="hurt_sfx" type="AudioStreamPlayer" parent="."]
stream = ExtResource( 9 )
volume_db = 16.227
pitch_scale = 1.19

[node name="eat_sfx" type="AudioStreamPlayer" parent="."]
stream = ExtResource( 8 )
volume_db = 11.638

[node name="player" type="AnimationPlayer" parent="."]
anims/appear = SubResource( 7 )

[node name="marker" type="Sprite" parent="."]
visible = false
position = Vector2( 0, 47 )
scale = Vector2( 0.3, 0.3 )
texture = ExtResource( 11 )

[connection signal="state_changed" from="tongue" to="." method="_on_tongue_state_changed"]
[connection signal="area_entered" from="tongue/tip" to="tongue" method="_on_tip_area_entered"]
